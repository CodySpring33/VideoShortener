version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3456:3456"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
    command: sh -c "npm run dev"

  backend:
    build: ./backend
    ports:
      - "8123:8123"
    volumes:
      - ./backend:/app
      - video_temp:/tmp/videos
    depends_on:
      - redis
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - S3_BUCKET=${S3_BUCKET}
      - CORS_ORIGINS=http://localhost:3456,http://192.168.254.12:3456,http://frontend:3456

  celery:
    build: ./backend
    command: celery -A app.tasks:app worker --loglevel=info
    volumes:
      - ./backend:/app
      - video_temp:/tmp/videos
      - ./.env:/app/.env
    depends_on:
      - redis
    env_file:
      - .env

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

volumes:
  video_temp:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: './downloads'
  redis_data: